diff --git a/rebuild_random.py b/rebuild_random.py
index 8fcfb75..5032318 100644
--- a/rebuild_random.py
+++ b/rebuild_random.py
@@ -47,7 +47,28 @@ def random_string(length, random_obj=random):
     :param random.Random random_obj: random object (default: random module)
     :return: str
     """
-    return "".join(chr(random_obj.randint(0, 255)) for _ in xrange(length))
+    #return "".join(chr(random_obj.randint(0, 255)) for _ in xrange(length))
+    def f(b):
+        if b:
+            orig = random_obj.randint(0, 255)
+            return orig
+        else:
+            #from bigfloat import precision, floor, BigFloat
+            #with precision(200):
+            if True:
+                # works for 2**52, fails for 2**53 (IEEE precision), and we need 2**64 for fsignal
+                MAX = 2**52
+                tmp = random_obj.randint(0, long(MAX-1))
+                tmp2 = int(__import__('math').floor(tmp * 256 / MAX))
+                return tmp2
+    state = random_obj.getstate()
+    result1 = "".join(chr(f(True)) for _ in xrange(length))
+    print('result1[:64]: %r' % result1.encode('hex')[:64])
+    random_obj.setstate(state)
+    result2 = "".join(chr(f(False)) for _ in xrange(length))
+    print('result2[:64]: %r' % result2.encode('hex')[:64])
+    assert result1 == result2
+    return result2
 
 
 def main():
